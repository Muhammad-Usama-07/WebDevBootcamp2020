{"version":3,"sources":["CounterContext.js","Child.js","CounterReducer.js","Child2.js","Parent.js","App.js","reportWebVitals.js","index.js"],"names":["counterContext","createContext","Child","counterValue","useContext","console","log","onClick","counterReducer","state","action","Child2","useReducer","CounterReducer","dispatch","Parent","App","countState","useState","CounterContext","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAIeA,G,YAFQC,wBAAc,ICatBC,EAZD,WACV,IAAIC,EAAeC,qBAAWJ,GAE9B,OADAK,QAAQC,IAAIH,GAER,gCACI,2EACA,gDAAmBA,EAAa,MAChC,wBAAQI,QAAW,WAAMJ,EAAa,KAAKA,EAAa,KAAxD,4B,OCHGK,EAPQ,SAACC,EAAOC,GAC3B,OAAQA,GACJ,IAAK,aACD,OAAOD,EAAQ,ICYZE,EAZA,WAAM,IAAD,EACQC,qBAAWC,EAAgB,GADnC,mBACXJ,EADW,KACJK,EADI,KAGhB,OADAT,QAAQC,IAAIG,GAEZ,gCACI,0EACA,6DAAgCA,KAChC,wBAAQF,QAAW,WAAMO,EAAS,eAAlC,4BCGOC,EATA,WACX,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,QCSGC,MAZf,WAEI,IAAIC,EAAaC,mBAAS,GAC5B,OACE,cAACC,EAAeC,SAAhB,CAAyBC,MAASJ,EAAlC,SACI,8BACE,cAAC,EAAD,SCCKK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.231f7d65.chunk.js","sourcesContent":["import React, {createContext} from 'react'\r\n\r\nconst counterContext = createContext(5);\r\n\r\nexport default counterContext;","import React, {useContext} from 'react'\r\nimport counterContext from './CounterContext.js'\r\n\r\nconst Child = () => {\r\n    let counterValue = useContext(counterContext)\r\n    console.log(counterValue);\r\n    return(\r\n        <div> \r\n            <h2>this is first child using Counter Context</h2>\r\n            <h2>the value is: {counterValue[0]}</h2>\r\n            <button onClick = {()=> {counterValue[1](++counterValue[0])}}>Increament</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Child;","const counterReducer = (state, action) =>{\r\n    switch (action){\r\n        case 'INCREAMENT':\r\n            return state + 1\r\n    }\r\n}\r\n\r\nexport default counterReducer;","import React, {useReducer} from 'react'\r\nimport CounterReducer from './CounterReducer.js'\r\n\r\nconst Child2 = () =>{\r\n    let [state, dispatch] = useReducer(CounterReducer, 1)\r\n    console.log(state)\r\n    return(\r\n    <div>\r\n        <h2>This is the second using Counter Reducer</h2>\r\n        <h3>Value of Reducer state is: {state}</h3>\r\n        <button onClick = {()=> {dispatch('INCREAMENT')}}>Increament</button>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Child2;","import React from 'react'\r\nimport Child from './Child.js'\r\nimport Child2 from './Child2.js'\r\n\r\nconst Parent = () => {\r\n    return(\r\n        <div>\r\n            <Child />\r\n            <Child2 />\r\n        </div>\r\n    )\r\n}\r\n        \r\nexport default Parent;","import React, {useState} from 'react' \nimport './App.css';\nimport Parent from './Parent'\nimport CounterContext from './CounterContext.js' \n\nfunction App() {\n    //let [count, SetCount] = useState(30)\n    let countState = useState(1)\n  return (\n    <CounterContext.Provider value = {countState} >\n        <div>\n          <Parent />\n        </div>\n    </CounterContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}